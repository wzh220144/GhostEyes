<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd  
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd ">

	<!-- Root Context: defines shared resources visible to all other web components -->

	<!-- database -->

	<context:property-placeholder location="classpath:hibernate.properties" />

	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${connection.driver_class}" />
		<property name="url" value="${connection.url}" />
		<property name="username" value="${connection.username}" />
		<property name="password" value="${connection.password}" />
	</bean>

	<!-- hibernate sessionFactory -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- scan entity -->
		<property name="packagesToScan">
			<list>
				<!-- scan for entity -->
				<value>com.wzh.ghosteyes.po</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="current_session_context_class">thread</prop>
				<!-- <prop key="hibernate.query.substitutions">${hibernate.query.substitutions}</prop> 
					<prop key="hibernate.default_batch_fetch_size">${hibernate.default_batch_fetch_size}</prop> 
					<prop key="hibernate.max_fetch_depth">${hibernate.max_fetch_depth}</prop> 
					<prop key="hibernate.generate_statistics">${hibernate.generate_statistics}</prop> 
					<prop key="hibernate.bytecode.use_reflection_optimizer">${hibernate.bytecode.use_reflection_optimizer}</prop> 
					<prop key="hibernate.cache.use_second_level_cache">${hibernate.cache.use_second_level_cache}</prop> 
					<prop key="hibernate.cache.use_query_cache">${hibernate.cache.use_query_cache}</prop> 
					<prop key="hibernate.cache.region.factory_class">${hibernate.cache.region.factory_class}</prop> 
					<prop key="hibernate.cache.use_structured_entries">${hibernate.cache.use_structured_entries}</prop> 
					<prop key="net.sf.ehcache.configurationResourceName">${net.sf.ehcache.configurationResourceName}</prop> -->
				<prop key="hibernate.cache.use_second_level_cache">${hibernate.cache.use_second_level_cache}</prop>
				<prop key="hibernate.cache.use_query_cache">${hibernate.cache.use_query_cache}</prop>
			</props>
		</property>
	</bean>

	<bean id="usrDao" class="com.wzh.ghosteyes.dao.impl.UsrDaoImpl">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<bean id="loginLogDao" class="com.wzh.ghosteyes.dao.impl.LoginLogDaoImpl">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<bean id="noteBookDao" class="com.wzh.ghosteyes.dao.impl.NoteBookDaoImpl">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<bean id="noteDao" class="com.wzh.ghosteyes.dao.impl.NoteDaoImpl">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>

	<bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>
	
	<!-- attributes for transcation manager -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			 <tx:method name="exists" read-only="true" /> 
		<tx:method name="save*" propagation="REQUIRED" />   
       <tx:method name="add*" propagation="REQUIRED" />   
        <tx:method name="create*" propagation="REQUIRED" />   
        <tx:method name="insert*" propagation="REQUIRED" />   
        <tx:method name="update*" propagation="REQUIRED" />   
        <tx:method name="merge*" propagation="REQUIRED" />   
        <tx:method name="del*" propagation="REQUIRED" />   
        <tx:method name="remove*" propagation="REQUIRED" />   
        <tx:method name="put*" propagation="REQUIRED" />   
        <tx:method name="use*" propagation="REQUIRED"/>   
 
        <tx:method name="get*" propagation="REQUIRED" />   
        <tx:method name="count*" propagation="REQUIRED" read-only="true" />   
        <tx:method name="find*" propagation="REQUIRED" read-only="true" />   
        <tx:method name="list*" propagation="REQUIRED" read-only="true" />  
         <tx:method name="*" propagation="REQUIRED" /> 
			
		</tx:attributes>
	</tx:advice>

	
	<!-- class that is controlled by transaction manager -->
	<aop:config proxy-target-class="true">
		<aop:pointcut id="dao" expression="execution(* com.wzh.ghosteyes.dao.impl.*.*(..))" />
		<aop:advisor pointcut-ref="dao" advice-ref="txAdvice" />
	</aop:config>

</beans>
